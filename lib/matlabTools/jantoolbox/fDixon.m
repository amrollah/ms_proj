function y = fDixon(x)
global DIXON_FUNCTION
switch DIXON_FUNCTION
case 1
  u = [-5; 0];
  v = [10; 15];
  xglob = [9.42477796   -3.14159265  3.14159265;...
      2.47499998   12.27500000  2.27500000];
  f = @dixon_bra;
  strName = 'Branin';
case 2
  u = [-3; -2];
  v = [3; 2];
  xglob = [ 0.08984201  -0.08984201;...
      -0.71265640   0.71265640];
  f = @dixon_cam;
  strName = 'FourHumpCamel';
case 3
  u = [-2; -2]; 
  v = [2; 2];
  xglob = [0.; -1.];
  f = @dixon_gpr;
  strName = 'GoldsteinPrice';
case 4
  u = [0; 0; 0];
  v = [1; 1; 1];
  xglob = [0.1; 0.55592003; 0.85218259];
  f = @dixon_hm3;
  strName = 'Hartmann3';
case 5
  u = [0; 0; 0; 0; 0; 0];
  v = [1; 1; 1; 1; 1; 1];
  xglob = [0.20168952;  0.15001069;  0.47687398;  0.27533243;  0.31165162;  0.65730054];
  f = @dixon_hm6;
  strName = 'Hartmann6';
case 6
  u = [0; 0; 0; 0];
  v = [10; 10; 10; 10];
  xglob = [4; 4; 4; 4];
  f = @dixon_sh5;
  strName = 'Shekel5';
case 7
  u = [0; 0; 0; 0];
  v = [10; 10; 10; 10];
  xglob = [4; 4; 4; 4];
  f = @dixon_sh7;
  strName = 'Shekel7';
case 8
  u = [0; 0; 0; 0];
  v = [10; 10; 10; 10];
  xglob = [4; 4; 4; 4];
  f = @dixon_sh10;
  strName = 'Shekel10';
case 9
  u = [-10; -10];
  v = [10; 10];
  xglob = [...
    -7.08350658  5.48286415  4.85805691  4.85805691 -7.08350658 -7.70831382 -1.42512845 -0.80032121 -1.42512844 -7.08350639 -7.70831354  5.48286415  5.48286415  4.85805691 -7.70831354 -0.80032121 -1.42512845 -0.80032121; ...
    4.85805691  4.85805681 -7.08350658  5.48286415 -7.70831382 -7.08350658 -0.80032121 -1.42512845 -7.08350639 -1.42512844  5.48286415 -7.70831354  4.85805691  5.48286415 -0.80032121 -7.70831354 -0.80032121 -1.42512845];
  f = @dixon_shu;
  strName = 'Shubert';
otherwise
  error('incorrect value in global variable DIXON_FUNCTION');
end;
r = v-u;
if nargin==0
  y = length(u);
elseif isempty(x)
  ri = ones(1,size(xglob,2));
  y = (xglob-u(:,ri))./r(:,ri);
elseif x==-1
  y = strName;
else  
  for i=1:size(x,2)
    y(i) = feval(f,x(:,i).*r+u);
  end;
end;

function f = dixon_bra(x)
a=1;
b=5.1/(4*pi*pi);
c=5/pi;
d=6;
h=10;
ff=1/(8*pi);
x1 = x(1);
x2 = x(2);
f=a.*(x2-b.*x1.^2+c.*x1-d).^2+h.*(1-ff).*cos(x1)+h;

function f = dixon_cam(x,y)
x1 = x(1);
x2 = x(2);
f=(4-2.1.*x1.^2+x1.^4./3).*x1.^2+x1.*x2+(-4+4.*x2.^2).*x2.^2;        

function f = dixon_gpr(x,y)
x1 = x(1);
x2 = x(2);
f =(1+(x1+x2+1).^2.*(19-14.*x1+3.*x1.^2-14.*x2+6.*x1.*x2+3.*x2.^2))...
.*(30+(2.*x1-3.*x2).^2.*(18-32.*x1+12.*x1.^2+48.*x2-36.*x1.*x2+27.*x2.^2));

function f = dixon_hm3(x)
a = [3.0d0,  0.1d0,  3.0d0,  0.1d0;
     10.0d0, 10.0d0, 10.0d0, 10.0d0;
     30.0d0, 35.0d0, 30.0d0, 35.0d0];
p = [ 0.36890d0, 0.46990d0, 0.10910d0, 0.03815d0;
      0.11700d0, 0.43870d0, 0.87320d0, 0.57430d0;
      0.26730d0, 0.74700d0, 0.55470d0, 0.88280d0];
c = [1.0d0, 1.2d0, 3.0d0, 3.2d0];
for i=1:4
 d(i) = sum(a(:,i).*(x - p(:,i)).^2);
end
f = -sum(c.*exp(-d)); 

function f = dixon_hm6(x)
if size(x,1) == 1
 x = x';
end
a = [10.00,  0.05,  3.00, 17.00;
     3.00, 10.00,  3.50,  8.00;
     17.00, 17.00,  1.70,  0.05;
     3.50,  0.10, 10.00, 10.00;
     1.70,  8.00, 17.00,  0.10;
     8.00, 14.00,  8.00, 14.00];
p = [0.1312, 0.2329, 0.2348, 0.4047;
     0.1696, 0.4135, 0.1451, 0.8828;
     0.5569, 0.8307, 0.3522, 0.8732;
     0.0124, 0.3736, 0.2883, 0.5743;
     0.8283, 0.1004, 0.3047, 0.1091;
     0.5886, 0.9991, 0.6650, 0.0381];
c = [1.0, 1.2, 3.0, 3.2];
for i=1:4
 d(i) = sum(a(:,i).*(x - p(:,i)).^2);
end
f = -sum(c.*exp(-d)); 

function f = dixon_sh5(x)
a = [4.0d0, 1.0d0, 8.0d0, 6.0d0, 3.0d0;
     4.0d0, 1.0d0, 8.0d0, 6.0d0, 7.0d0;
     4.0d0, 1.0d0, 8.0d0, 6.0d0, 3.0d0;
     4.0d0, 1.0d0, 8.0d0, 6.0d0, 7.0d0];
c = [0.1d0, 0.2d0, 0.2d0, 0.4d0, 0.4d0];
if size(x,1) == 1
 x = x';
end
for i=1:5
 b = (x - a(:,i)).^2;
 d(i) = sum(b);
end
f = -sum((c+d).^(-1));

function f = dixon_sh7(x)
a = [4, 1, 8, 6, 3, 2, 5;
     4, 1, 8, 6, 7, 9, 5;
     4, 1, 8, 6, 3, 2, 3;
     4, 1, 8, 6, 7, 9, 3];
c = [0.1 0.2 0.2 0.4 0.4 0.6 0.3];
if size(x,1) == 1
 x = x';
end
for i=1:7
 b = (x - a(:,i)).^2;
 d(i) = sum(b);
end
f = -sum((c+d).^(-1));

function f = dixon_sh10(x)
a = [4, 1, 8, 6, 3, 2, 5, 8, 6, 7;
     4, 1, 8, 6, 7, 9, 5, 1, 2, 3.6;
     4, 1, 8, 6, 3, 2, 3, 8, 6, 7;
     4, 1, 8, 6, 7, 9, 3, 1, 2, 3.6];
c = [ 0.1, 0.2, 0.2, 0.4, 0.4, 0.6, 0.3, 0.7, 0.5, 0.5];
if size(x,1) == 1
 x = x';
end
for i=1:10
 b = (x - a(:,i)).^2;
 d(i) = sum(b);
end
f = -sum((c+d).^(-1));

function f = dixon_shu(x)
sum1 = 0; sum2 = 0;
x1 = x(1);
x2 = x(2);
for i = 1:5
 sum1 = sum1 + i.*cos((i+1).*x1+i);
 sum2 = sum2 + i.*cos((i+1).*x2+i);
end
f = sum1.*sum2;
